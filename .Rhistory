setwd("~/Dropbox/MOOCs/Coursera/Data Science Specialization/03 - Getting and Cleaning Data/Week 4/Getting-and-Cleaning-Data-Course-Project")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "./UCI HAR Dataset" method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "./UCI HAR Dataset", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "./getdata-projectfiles-UCI HAR Dataset.zip", method = "curl")
setwd("~/Dropbox/MOOCs/Coursera/Data Science Specialization/
03 - Getting and Cleaning Data/Week 4/
Getting-and-Cleaning-Data-Course-Project")
library(dplyr)
file <- "getdata-projectfiles-UCI HAR Dataset.zip"
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
# Checking if .zip exists
if (!file.exists(file)) {
download.file(fileURL, destfile = "./UCI Har ", method="curl")
}
if (!file.exists("UCI HAR Dataset")) {
unzip(file)
}
activity <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("class_label", "activity"))
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","feature"))
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$feature)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "class_label")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$feature)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "class_label")
X <- rbind(X_train, X_test)
Y <- rbind(y_train, y_test)
Subject <- rbind(subject_train, subject_test)
Merged_Data <- cbind(Subject, Y, X)
View(X)
View(X_test)
View(Subject)
# This script downloads and tidies the data set of human activity recognition
# using smartphones from the machine learning repository of the University of
# California Irvine as part of the Getting and Cleaning Data Course Project.
# Setting the workspace
setwd("~/Dropbox/MOOCs/Coursera/Data Science Specialization/
03 - Getting and Cleaning Data/Week 4/
Getting-and-Cleaning-Data-Course-Project")
# Loading of packages
library(dplyr)
# Setting file names and URLs
file <- "getdata-projectfiles-UCI HAR Dataset.zip"
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
# Checking if .zip exists
if (!file.exists(file)) {
download.file(fileURL, destfile = "./UCI Har ", method="curl")
}
# Checking if folder exists
if (!file.exists("UCI HAR Dataset")) {
unzip(file)
}
# Setting data frames
activity <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("class_label", "activity"))
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","feature"))
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$feature)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "class_label")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$feature)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "class_label")
# Merges the training and test sets
subject <- rbind(subject_train, subject_test)
X <- rbind(X_train, X_test)
y <- rbind(y_train, y_test)
database <- cbind(subject, y, X)
# This script downloads and tidies the data set of human activity recognition
# using smartphones from the machine learning repository of the University of
# California Irvine as part of the Getting and Cleaning Data Course Project.
# Setting the workspace
setwd("~/Dropbox/MOOCs/Coursera/Data Science Specialization/03 - Getting and Cleaning Data/Week 4/Getting-and-Cleaning-Data-Course-Project")
# Loading of packages
library(dplyr)
# Setting file names and URLs
file <- "getdata-projectfiles-UCI HAR Dataset.zip"
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
# Checking if .zip exists
if (!file.exists(file)) {
download.file(fileURL, destfile = "./UCI Har ", method="curl")
}
# Checking if folder exists
if (!file.exists("UCI HAR Dataset")) {
unzip(file)
}
# Setting data frames
activity <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("class_label", "activity"))
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","feature"))
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$feature)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "class_label")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$feature)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "class_label")
# Merges the training and the test sets to create one data set
subject <- rbind(subject_train, subject_test)
X <- rbind(X_train, X_test)
y <- rbind(y_train, y_test)
database <- cbind(subject, y, X)
# Extracts only the measurements on the mean and standard deviation for each measurement.
msd_database <- select(database, subject, class_label, contains("mean"), contains("std"))
View(msd_database)
msd_database$class_label <- activity[msd_database$class_label, 2]
names(msd_database)[2] = "activity"
names(msd_database)
names(msd_database)[2] = "activity"
names(msd_database) <- gsub("Acc", "Accelerometer", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("Gyro", "Gyroscope", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("BodyBody", "Body", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("Mag", "Magnitude", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("^t", "Time", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("^f", "Frequency", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("tBody", "TimeBody", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("-mean()", "Mean", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("-std()", "STD", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("-freq()", "Frequency", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("angle", "Angle", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("gravity", "Gravity", names(msd_database), ignore.case = TRUE)
names(msd_database)
# This script downloads and tidies the data set of human activity recognition
# using smartphones from the machine learning repository of the University of
# California Irvine as part of the Getting and Cleaning Data Course Project.
# Setting the workspace
setwd("~/Dropbox/MOOCs/Coursera/Data Science Specialization/03 - Getting and Cleaning Data/Week 4/Getting-and-Cleaning-Data-Course-Project")
# Loading of packages
library(dplyr)
# Setting file names and URLs
file <- "getdata-projectfiles-UCI HAR Dataset.zip"
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
# Checking if .zip exists
if (!file.exists(file)) {
download.file(fileURL, destfile = "./UCI Har ", method="curl")
}
# Checking if folder exists
if (!file.exists("UCI HAR Dataset")) {
unzip(file)
}
# Setting data frames
activity <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("class_label", "activity"))
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","feature"))
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$feature)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "class_label")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$feature)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "class_label")
# Merges the training and the test sets to create one data set
subject <- rbind(subject_train, subject_test)
X <- rbind(X_train, X_test)
y <- rbind(y_train, y_test)
database <- cbind(subject, y, X)
# Extracts only the measurements on the mean and standard deviation for each measurement
msd_database <- select(database, subject, class_label, contains("mean"), contains("std"))
# Uses descriptive activity names to name the activities in the data set
msd_database$class_label <- activity[msd_database$class_label, 2]
# Appropriately labels the data set with descriptive variable names
names(msd_database)[2] = "activity"
names(msd_database) <- gsub("^t", "Time", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("^f", "Frequency", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("Acc", "Accelerometer", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("Gyro", "Gyroscope", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("Mag", "Magnitude", names(msd_database), ignore.case = TRUE)
names(msd_database) <- gsub("BodyBody", "Body", names(msd_database), ignore.case = TRUE)
names(msd_database)
# This script downloads and tidies the data set of human activity recognition
# using smartphones from the machine learning repository of the University of
# California Irvine as part of the Getting and Cleaning Data Course Project.
# Setting the workspace
setwd("~/Dropbox/MOOCs/Coursera/Data Science Specialization/03 - Getting and Cleaning Data/Week 4/Getting-and-Cleaning-Data-Course-Project")
# Loading of packages
library(dplyr)
# Setting file names and URLs
file <- "getdata-projectfiles-UCI HAR Dataset.zip"
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
# Checking if .zip exists
if (!file.exists(file)) {
download.file(fileURL, destfile = "./UCI Har ", method="curl")
}
# Checking if folder exists
if (!file.exists("UCI HAR Dataset")) {
unzip(file)
}
# Setting data frames
activity <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("class_label", "activity"))
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","feature"))
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$feature)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "class_label")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$feature)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "class_label")
# Merges the training and the test sets to create one data set
subject <- rbind(subject_train, subject_test)
X <- rbind(X_train, X_test)
y <- rbind(y_train, y_test)
database <- cbind(subject, y, X)
# Extracts only the measurements on the mean and standard deviation for each measurement
clean_database <- select(database, subject, class_label, contains("mean"), contains("std"))
# Uses descriptive activity names to name the activities in the data set
clean_database$class_label <- activity[clean_database$class_label, 2]
# Appropriately labels the data set with descriptive variable names
names(clean_database)[2] = "activity"
names(clean_database) <- gsub("^t", "Time", names(clean_database), ignore.case = TRUE)
names(clean_database) <- gsub("^f", "Frequency", names(clean_database), ignore.case = TRUE)
names(clean_database) <- gsub("Acc", "Accelerometer", names(clean_database), ignore.case = TRUE)
names(clean_database) <- gsub("Gyro", "Gyroscope", names(clean_database), ignore.case = TRUE)
names(clean_database) <- gsub("Mag", "Magnitude", names(clean_database), ignore.case = TRUE)
names(clean_database) <- gsub("BodyBody", "Body", names(clean_database), ignore.case = TRUE)
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
clean_database2 <- clean_database %>% group_by(subject, activity) %>% summarise_all(funs(mean))
write.table(clean_database2, "Clean Database Means.txt", row.name=FALSE)
View(clean_database2)
class(activity)
View(database)
# This script downloads and tidies the data set of human activity recognition
# using smartphones from the machine learning repository of the University of
# California Irvine as part of the Getting and Cleaning Data Course Project.
# It also creates a tidy data set with the averages of the means and standard
# deviations grouped by subject and activity.
# Loading the packages
library(dplyr)
# Setting file names and URLs
file <- "getdata-projectfiles-UCI HAR Dataset.zip"
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
# Checking if .zip exists
if (!file.exists(file)) {
download.file(fileURL, destfile = "./UCI Har ", method="curl")
}
# Checking if folder exists
if (!file.exists("UCI HAR Dataset")) {
unzip(file)
}
# Setting data frames
activity <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("class_label", "activity"))
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","feature"))
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
X_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$feature)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "class_label")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
X_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$feature)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "class_label")
# Merges the training and the test sets to create one data set
subject <- rbind(subject_train, subject_test)
X <- rbind(X_train, X_test)
y <- rbind(y_train, y_test)
database <- cbind(subject, y, X)
# Extracts only the measurements on the mean and standard deviation for each measurement
clean_database <- select(database, subject, class_label, contains("mean"), contains("std"))
# Uses descriptive activity names to name the activities in the data set
clean_database$class_label <- activity[clean_database$class_label, 2]
# Appropriately labels the data set with descriptive variable names
names(clean_database)[2] = "activity"
names(clean_database) <- gsub("^t", "Time", names(clean_database), ignore.case = TRUE)
names(clean_database) <- gsub("^f", "Frequency", names(clean_database), ignore.case = TRUE)
names(clean_database) <- gsub("Acc", "Accelerometer", names(clean_database), ignore.case = TRUE)
names(clean_database) <- gsub("Gyro", "Gyroscope", names(clean_database), ignore.case = TRUE)
names(clean_database) <- gsub("Mag", "Magnitude", names(clean_database), ignore.case = TRUE)
names(clean_database) <- gsub("BodyBody", "Body", names(clean_database), ignore.case = TRUE)
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
clean_database2 <- clean_database %>% group_by(subject, activity) %>% summarise_all(funs(mean))
write.table(clean_database2, "Clean Database Means.txt", row.name=FALSE)
asd
